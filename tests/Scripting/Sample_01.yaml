openapi: 3.0.0
info:
  version: 1.0.0
  title: GAC Supplier Management Module
servers:
  - url: https://gac-sms-dev.azurewebsites.net/api/v1
paths:
  /:
    get:
      description: API Info
      responses:
        '200':
          description: API Version info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiInfo'
  
  /file:
    get:
      description: Proxy to Azure Blobs service
      security:
        - JwtTokenInQuery: []
      parameters:
      - name: url
        in: query
        description: Azure Blobs Url
        required: true
        schema:
          type: string
      responses:
        '200':
          description: File payload
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
  
  /data:
    get:
      description: Get GAC companies, service categories, countries
      security:
        - JwtAuthToken: []
      parameters:
      - name: sources
        in: query
        description: >
          A colon-separated list of data source names. The possible names are 'countries', 'companies' and 'serviceCategories'
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Requested data
          content: 
            application/json:
              schema:
                type: object
                properties:
                  companies:
                    type: array
                    items:
                      $ref: '#/components/schemas/Company'
                  countries:
                    type: array
                    items: 
                      $ref: '#/components/schemas/Country'
                  serviceCategories:
                    type: array
                    items: 
                      $ref: '#/components/schemas/ServiceCategory'
  
  /user:
    get:
      description: Get user information from JWT token
      security:
        - JwtAuthToken: []
      responses:
        '200':
          description: User info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /users:
    get:
      description: Get user information from JWT token
      security:
        - JwtAuthToken: []
      parameters:
      - name: q 
        in: query
        description: Name to search the users by, all users are returned if empty 
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Users 
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserMinimal'
  
  /adminRequests:
    get:
      description: Get admin requests
      security:
        - JwtAuthToken: []
      responses:
        '200':
          description: List of requests
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdminRequest'

  /approvalMatrix/{id}:
    get:
      description: Get Approval Matrix for the specified GAC Company
      security:
        - JwtAuthToken: []
      parameters:
        - name: id
          in: path
          description: GAC Company Id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Approval matrix
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApprovalMatrix'

  /searchForSupplier:
    get:
      description: Search for a supplier
      security:
        - JwtAuthToken: []
      parameters:
      - name: name
        in: query
        description: Supplier Name
        required: false
        schema:
          type: string
      - name: serviceCategory
        in: query
        description: Service Category
        required: false 
        schema:
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      responses:
        '200':
          description: Available Suppliers, ordered by relevance w.r.t. the search query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierList'

  /alternativeSuppliers:
    get:
      description: Get a list of suppliers with a similar name or providing a specified service
      security:
        - JwtAuthToken: []
      parameters:
      - name: name
        in: query
        description: Supplier Name
        required: false
        schema:
          type: string
      - name: serviceCategories
        in: query
        description: Comma-separated list of Service Categories
        required: false 
        schema:
          type: string
      - name: q
        in: query
        description: Filtering,Grouping,Sorting and Paging parameters coming from the Kendo grid
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Similar suppliers, Kendo grid's DataSourceResult serialized into Json, see  https://www.telerik.com/kendo-angular-ui/components/dataquery/mvc-integration/
          content:
            application/json:
              schema:
                type: object

  /requestForSupplier/{id}/approve:
    post:
      description: Approve a New Supplier Request
      security:
        - JwtAuthToken: []
      requestBody:
        description: Approval info
        required: true
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/RequestForSupplierApprove'
      parameters:
        - name: id
          in: path
          description: Request Id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  newSupplierId:
                    type: string
          description: Id of the created supplier

  /requestForSupplier/{id}/reject:
    post:
      description: Reject a New Supplier Request
      security:
        - JwtAuthToken: []
      parameters:
        - name: id
          in: path
          description: Request Id
          required: true
          schema:
            type: string
      requestBody:
        description: Rejection info
        required: true
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/RequestForSupplierReject'
      responses:
        '200':
          description: Request rejected

  /requestForSupplier/{id}:
    get:
      description: Get request for supplier by Id
      security:
        - JwtAuthToken: []
      parameters: 
      - $ref: '#/components/parameters/guid'
      responses:
        '200':
          description: Request data
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/RequestForSupplierDetail'
                
  /requestForSupplier:
    get:
      description: Get a list of assigned requests for supplier
      security:
        - JwtAuthToken: []
      parameters: 
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
      responses:
        '200':
          description: Assigned requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestForSupplierList'
    post:
      description: Create a New Supplier Request
      security:
        - JwtAuthToken: []
      requestBody:
        description: New supplier info
        required: true
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/RequestForSupplier'
      responses:
        '200':
          description: Request created

  /requestForService/{id}:
    get:
      description: Get request detail
      security:
        - JwtAuthToken: []
      parameters:
        - name: id
          in: path
          description: Service request id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Supplier detail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestForServiceDetailView'
  
  /requestForService/{id}/approve:
    post:
      description: Approve service request
      security:
        - JwtAuthToken: []
      parameters:
        - name: id
          in: path
          description: Service request id
          required: true
          schema:
            type: string
      requestBody:
        description: Approval info
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestForServiceApprove'
      responses:
        '200':
          description: Request approved
  
  /requestForService/{id}/reject:
    post:
      description: Reject service request
      security:
        - JwtAuthToken: []
      parameters:
        - name: id
          in: path
          description: Service request id
          required: true
          schema:
            type: string
      requestBody:
        description: Rejection info
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestForServiceReject'
      responses:
        '200':
          description: Request rejected


  /views/supplier/{id}/detail:
    get:
      description: Data for view /supplier/:id
      security:
        - JwtAuthToken: []
      parameters:
        - name: id
          in: path
          description: Supplier id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Supplier detail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewSupplierDetail'

  /supplier/{id}/questionnaire:
    get:
      description: Answers from questionnaire
      security:
        - JwtAuthToken: []
      parameters:
        - name: id
          in: path
          description: Supplier id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Questionnaire data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionnaireView'

  /supplier/{id}/requestForService:
    post:
      description: Request additional service categories
      security:
        - JwtAuthToken: []
      parameters:
        - name: id
          in: path
          description: Supplier id
          required: true
          schema:
            type: string
      requestBody:
        description: Message and list of service categories
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupplierServiceCategoriesRequest'
      responses:
        '200':
          description: Successful submission
  
  /supplier/{id}/requestsForService/company/{companyId}:
    get:
      description: List of service requests for supplier and company waiting for approval/rejection
      security:
        - JwtAuthToken: []
      parameters:
        - name: id
          in: path
          description: SupplierId
          required: true
          schema:
            type: string
        - name: companyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of service requests
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RequestForServiceView'
      

  /supplier/{id}/requestForBasicInfoUpdate:
    post:
      description: Text request to update supplier
      security:
        - JwtAuthToken: []
      parameters:
        - name: id
          in: path
          description: Supplier id
          required: true
          schema:
            type: string
      requestBody:
        description: Changes the user is requesting
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupplierUpdate'
      responses:
        '200':
          description: Succesfull submission

  /supplier/{id}/requestForBasicInfoUpdate/{reqId}/reject:
    post:
      description: Reject basic info update request
      security:
        - jwtAuthToken: []
      parameters:
        - name: id
          in: path
          description: SupplierId
          required: true
          schema: 
            type: string
        - name: reqId
          in: path
          description: Request Id
          required: true
          schema: 
            type: string
      requestBody:
        description: Rejection data
        required: true
        content:
          appliecation/json:
            schema:
              $ref: '#/components/schemas/RejectBasicInfoUpdateRequest'
      responses:
        '200':
          description: Succesfull submission

  /supplier/{id}/requestForBasicInfoUpdate/{reqId}/approve:
    post:
      description: Approve basic info update request
      security:
        - jwtAuthToken: []
      parameters:
        - name: id
          in: path
          description: SupplierId
          required: true
          schema: 
            type: string
        - name: reqId
          in: path
          description: Request Id
          required: true
          schema: 
            type: string
      requestBody:
        description: Approval data
        required: true
        content:
          appliecation/json:
            schema:
              $ref: '#/components/schemas/ApproveBasicInfoUpdateRequest'
      responses:
        '200':
          description: Succesfull submission

  /supplier/{id}/requestsForBasicInfoUpdate/company/{companyId}:
    get:
      description: List of basic info update requests for supplier and company waiting for approval/rejection
      security:
        - JwtAuthToken: []
      parameters:
        - name: id
          in: path
          description: SupplierId
          required: true
          schema:
            type: string
        - name: companyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of basic info update requests
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RequestBasicInfoUpdateView'

  /supplier/{id}/sendQuestionnaireNotification:
    post:
      description: Send questionnaire notification to supplier
      security:
        - JwtAuthToken: []
      parameters:
        - name: id
          in: path
          description: Supplier id
          required: true
          schema:
            type: string
      requestBody:
        description: Notification details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendQuestionnaireNotification'
      responses:
        '200':
          description: Successful submission
  
  /supplier/{id}/sendQuestionnaire:
    post:
      description: Send questionnaire to supplier
      security:
        - JwtAuthToken: []
      parameters:
        - name: id
          in: path
          description: Supplier id
          required: true
          schema:
            type: string
      requestBody:
        description: Attached files and questionnaire version used 
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendQuestionnaireToSupplier'
      responses:
        '200':
          description: Successful submission

  /supplier/{id}/updateBasicInfo:
    post:
      description: Update supplier basic info
      security:
        - JwtAuthToken: []
      parameters:
        - name: id
          in: path
          description: Supplier id
          required: true
          schema: 
            type: string
      requestBody:
        description: Basic info
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupplierUpdateBasicInfo'
      responses:
        '200':
          description: Successful update

  /service/create:
    post:
      description: Create service 
      security:
        -JwtAuthToken: []
      requestBody:
        description: Services to create
        required: true
        content: 
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceCreate'

  /service/{id}/approve:
    post:
      description: Approve service
      security:
        - JwtAuthToken: []
      parameters:
        - name: id
          in: path
          description: Service Id
          required: true
          schema:
            type: string
      requestBody:
        description: Approval details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceApproval'
      responses:
        '200':
          description: Successful approval

  /service/{id}/reject:
    post:
      description: Reject service
      security:
        - JwtAuthToken: []
      parameters:
        - name: id
          in: path
          description: Service Id
          required: true
          schema:
            type: string
      requestBody:
        description: Rejection details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceRejection'
      responses:
        '200':
          description: Successful rejection
                
  /service/{id}/conditionallyApprove:
    post:
      description: Conditionally Approve service
      security:
        - JwtAuthToken: []
      parameters:
        - name: id
          in: path
          description: Service Id
          required: true
          schema:
            type: string
      requestBody:
        description: Conditional Approval details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceConditionalApproval'
      responses:
        '200':
          description: Successful conditional approval
  
  /service/{id}/conditionallyReject:
    post:
      description: Conditionally Reject service
      security:
        - JwtAuthToken: []
      parameters:
        - name: id
          in: path
          description: Service Id
          required: true
          schema:
            type: string
      requestBody:
        description: Conditional Rejection details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceConditionalRejection'
      responses:
        '200':
          description: Successful conditional rejection                

  /service/{id}/evaluate:
    post:
      description: Evaluate the service
      security:
        - JwtAuthToken: []
      parameters:
        - name: id
          in: path
          description: Service Id
          required: true
          schema:
            type: string
      requestBody:
        description: Evaluation details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceEvaluation'
      responses:
        '200':
          description: Successful submission

  /service/assessRisks:
    post:
      description: Assess risk for services
      security:
        - JwtAuthToken: []
      requestBody:
        description: Risk assessment details
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/RiskAssessmentArg'
      responses:
        '200':
          description: Successful submission

  /service/sendForEvaluation:
    post:
      description: Set service for evaluation
      security:
        - JwtAuthToken: []
      requestBody:
        description: Send for evaluation details
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ServiceSendForEvaluationArg'
      responses:
        '200':
          description: Successful submission
  
  /service/sendForApproval:
    post:
      description: Send services for approval
      security: 
        - JwtAuthToken: []
      requestBody:
        description: List of services send for approval
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ServiceSendForApproval'
      responses:
        '200':
          description: Successful submission

  /questionnaireDefinition/latest:
    get:
      description: Gets the latest questionnaire definition
      security:
        - JwtAuthToken: []
      responses:
        '200':
          description: Questionnaire view data 
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/QuestionnaireDefinition'
  
  /questionnaireDefinition/{id}:
    get:
      description: Gets the questionnaire definition
      security:
        - JwtAuthToken: []
      parameters:
        - name: id
          in: path
          description: Questionnaire definition Id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Questionnaire view data 
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/QuestionnaireDefinition'

  /evaluation/{supplierId}/company/{companyId}:
    get:
      description: Gets the lates evaluation for supplier and company
      security:
        - JwtAuthToken: []
      parameters:
        - name: supplierId
          in: path
          description: Supplier ID
          required: true
          schema:
            type: string
        - name: companyId
          in: path
          description: Company ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Evaluation data
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/EvaluationView'

  /evaluation/{questionnaireId}/company/{companyId}:
    post:
      description: Saves evaluation for questionnaire and company
      security:
        - JwtAuthToken: []
      parameters:
        - name: questionnaireId
          in: path
          description: Questionnaire ID
          required: true
          schema: 
            type: string
        - name: companyId
          in: path
          description: Company ID
          required: true
          schema: 
            type: string
      requestBody:
        description: Evaluation data to submit 
        required: true
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/EvaluationDataDefinition'
      responses:
        '200':
          description: Questionnaire saved

  /questionnaire/{id}/save:
    post:
      description: Saves a partially filled questionnaire
      parameters:
        - name: id
          in: path
          description: Questionnaire Id
          required: true
          schema:
            type: string
      requestBody:
        description: Questionnaire data to save 
        required: true
        content:
          application/json:
            schema: 
              type: object
              properties:
                basicInfo:
                  $ref: '#/components/schemas/BasicInfoUpdate'
                answers:
                  $ref: '#/components/schemas/QuestionnaireAnswers'
              required:
                - basicInfo
                - answers
      responses:
        '200':
          description: Questionnaire saved 

  /questionnaire/{id}/submit:
    post:
      description: Submits a filled questionnaire
      parameters:
        - name: id
          in: path
          description: Questionnaire Id
          required: true
          schema:
            type: string
      requestBody:
        description: Questionnaire data to submit 
        required: true
        content:
          application/json:
            schema: 
              type: object
              properties:
                basicInfo:
                  $ref: '#/components/schemas/BasicInfoUpdate'
                answers:
                  $ref: '#/components/schemas/QuestionnaireAnswers'
              required:
                - basicInfo
                - answers
      responses:
        '200':
          description: Questionnaire submitted 

  /questionnaire/{id}:
    get:
      description: Gets the data and structure of a questionnaire 
      parameters:
        - name: id
          in: path
          description: Questionnaire Id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Questionnaire view data 
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/QuestionnaireSupplierView'
        '410':
          description: Questionnaire is not available for the supplier to fill

components:
  
  schemas:
    PaginatedList:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
        page:
          type: integer
        pageSize:
          type: integer
        total:
          type: integer
      required:
        - data
        - page
        - pageSize
        - total

    ApiInfo:
      type: object
      properties:
        assemblySemVer:
          type: string
        informationalVersion:
          type: string
        applicationId:
          type: string
        activeDirectoryId:
          type: string

    Error:
      type: object
      properties:
        error:
          type: string
      required: 
        - error
    
    EnumEntity:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
      required:
        - id
        - name

    User:
      type: object
      properties:
        email:
          type: string
        name:
          type: string
        company:
          $ref: '#/components/schemas/Company'
        managedCompanies:
          type: array
          items:
            $ref: '#/components/schemas/Company'
        administeredCompanies:
          type: array
          items:
            $ref: '#/components/schemas/Company'
        managedRegions:
          type: array
          items:
            $ref: '#/components/schemas/Region'
        roles:
          type: array
          items:
            $ref: '#/components/schemas/Role'
      required:
        - email
        - name
        - company
        - managedCompanies
        - administeredCompanies
        - managedRegions
        - roles

    UserMinimal:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
      required:
        - name
        - email
    
    AdminRequestView:
      type: object
      properties:
        id:
          type: string
        companyId:
          type: string
        name:
          type: string
        logo:
          type: string
        city:
          type: string
        country:
          type: string
        createdUtc:
          type: string
        supplierId:
          type: string
        type: 
          type: string
          enum:
            - Supplier
            - Service
            - SupplierBasicInfo

    AdminRequest:
      allOf:
        - $ref: '#/components/schemas/PaginatedList' 
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/AdminRequestView'

    ServiceCategory:
      allOf:
        - $ref: '#/components/schemas/EnumEntity'
        - type: object
          properties:
            isCritical:
              type: boolean
            questionnaireRequired:
              type: boolean
    
    Company:
      allOf:
        - $ref: '#/components/schemas/EnumEntity'
        - type: object
          properties:
            regionId:
              type: string
      
    Country:
      allOf:
        - $ref: '#/components/schemas/EnumEntity'
    
    Region:
      allOf:
        - $ref: '#/components/schemas/EnumEntity'
    
    Role:
      type: object
      properties:
        id:
          type: number
        name:
          type: string

    Contact:
      type: object
      properties:
        name:
          type: string
        position:
          type: string
        email:
          type: string
        mobile:
          type: string
      required:
        - name
        - email
        - mobile

    RiskSeverity:
      type: string
      enum:
        - NEGLIGIBLE
        - MINOR
        - MODERATE
        - MAJOR
        - SEVERE

    ApprovalMatrix:
      type: object
      properties:
        nonCriticalApproverEmail:
          type: string 
        criticalUrgentApproverEmail:
          type: string 
        criticalNonUrgentEvaluatorEmail:
          type: string 
        criticalNonUrgentApproverEmail:
          type: string 
        criticalReevaluationEvaluatorEmail:
          type: string 
        criticalReevaluationApproverEmail:
          type: string 
        nonCriticalReapprovalApproverEmail:
          type: string 
        nonCriticalApproverName:
          type: string 
        criticalUrgentApproverName:
          type: string 
        criticalNonUrgentEvaluatorName:
          type: string 
        criticalNonUrgentApproverName:
          type: string 
        criticalReevaluationEvaluatorName:
          type: string 
        criticalReevaluationApproverName:
          type: string 
        nonCriticalReapprovalApproverName:
          type: string 
      required:
        - nonCriticalApproverEmail
        - criticalUrgentApproverEmail
        - criticalNonUrgentEvaluatorEmail
        - criticalNonUrgentApproverEmail
        - criticalReevaluationEvaluatorEmail
        - criticalReevaluationApproverEmail
        - nonCriticalReapprovalApproverEmail
        - nonCriticalApproverName
        - criticalUrgentApproverName
        - criticalNonUrgentEvaluatorName
        - criticalNonUrgentApproverName
        - criticalReevaluationEvaluatorName
        - criticalReevaluationApproverName
        - nonCriticalReapprovalApproverName
  
    RiskAssessment:
      type: object
      properties:
        frequency:
          type: string
          enum:
            - ONE_TIME_ONLY
            - MORE_THAN_ONCE_A_YEAR
            - MORE_THAN_ONCE_A_MONTH
            - MORE_THAN_ONCE_A_WEEK
            - DAILY
        previousPerformance:
          type: string
          enum:
            - USED_MORE_THAN_ONCE_PERFORMANCE_GOOD 
            - USED_ONCE_PERFORMANCE_GOOD 
            - NEVER_USED 
            - USED_ONCE_PERFORMANCE_POOR 
            - USED_MORE_THAN_ONCE_PERFORMANCE_POOR 
        potentialLossOfContracts:
          $ref: '#/components/schemas/RiskSeverity'
        potentialRiskToHealthAndSafety:
          $ref: '#/components/schemas/RiskSeverity'
        inabilityToMeetLegalRequirements:
          $ref: '#/components/schemas/RiskSeverity'
        gacBusinessContinuity:
          $ref: '#/components/schemas/RiskSeverity'
        companyReputation:
          $ref: '#/components/schemas/RiskSeverity'
        estimatedPotentialLoss:
          $ref: '#/components/schemas/RiskSeverity'
      required:
        - frequency
        - previousPerformance
        - potentialLossOfContracts
        - potentialRiskToHealthAndSafety
        - inabilityToMeetLegalRequirements
        - gacBusinessContinuity
        - companyReputation
        - estimatedPotentialLoss
        
    RiskAssessmentArg:
      allOf:
        - $ref: '#/components/schemas/RiskAssessment'
        - type: object
          properties:
            serviceId:
              type: string

#################################################################### #
# Questionnaire
#################################################################### #

    QuestionnaireDefinition: {}

    QuestionnaireAnswers: {}

    QuestionnaireView:
      type: object
      properties:
        latestQuestionnaireId:
          type: string
        definitionId:
          type: string
        inProgress:
          type: object
          properties:
            id:
              type: string
            sentUtc:
              type: string
          required:
            - id
            - sentUtc
        data:
          $ref: '#/components/schemas/QuestionnaireAnswers'
        previousData:
          $ref: '#/components/schemas/QuestionnaireAnswers'
    
    BasicInfoUpdate:
      type: object
      properties:
        name:
          type: string
        address:
          type: string
        city:
          type: string
        country:
          type: string
        postCode:
          type: string
        telephone:
          type: string
        fax:
          type: string
        website:
          type: string
        logo:
          $ref: '#/components/schemas/FileUpload'
        servicesOffered:
          type: string
        headOfCompanyName:
          type: string
        headOfCompanyPosition:
          type: string
        headOfCompanyEmail:
          type: string
        headOfCompanyMobile:
          type: string
        contactPersons:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
      required:
        - name
        - address
        - country
        - city
        - telephone
        - servicesOffered
        - contactPersons

    BasicInfoView:
      type: object
      properties:
        name:
          type: string
        address:
          type: string
        city:
          type: string
        country:
          type: string
        postCode:
          type: string
        telephone:
          type: string
        fax:
          type: string
        website:
          type: string
        logo:
          type: string
        servicesOffered:
          type: string
        headOfCompanyName:
          type: string
        headOfCompanyPosition:
          type: string
        headOfCompanyEmail:
          type: string
        headOfCompanyMobile:
          type: string
        contactPersons:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
        lastUpdatedUtc:
          type: string
      required:
        - name
        - address
        - country
        - city
        - telephone
        - servicesOffered
        - contactPersons
        - lastUpdatedUtc

    QuestionnaireSupplierView:
      type: object
      properties:
        basicInfo:
          $ref: '#/components/schemas/BasicInfoView'
        data:
          $ref: '#/components/schemas/QuestionnaireAnswers'
        definition:
          $ref: '#/components/schemas/QuestionnaireDefinition'
        countries:
          type: array
          items: 
            $ref: '#/components/schemas/Country'
        status:
          type: string
          enum:
            - Sent
            - Received
        deadlineUtc:
          type: string
          format: date
        comment:
          type: string
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/UploadedFile'
      required:
        - basicInfo
        - data
        - definition
        - countries
        - status
        - attachments
        - deadlineUtc


    SendQuestionnaireToSupplier:
      type: object
      properties:
        questionnaireDefinitionId:
          type: string
        attachments:
          type: array 
          items:
            $ref: '#/components/schemas/FileUpload'
        contactEmail:
          type: string
        requestedAction:
          type: string
          enum:
            - Fill
            - Amend
        comment:
          type: string
        companyId:
          type: string
      required:
        - questionnaireDefinitionId
        - attachments
        - contactEmail
        - requestedAction
        - companyId
    
    SupplierUpdateBasicInfo:
      type: object
      properties:
        name:
          type: string
        doplphinCode:
          type: string
        address:
          type: string
        city:
          type: string
        country:
          type: string
        postCode:
          type: string
        telephone:
          type: string
        fax:
          type: string
        website:
          type: string
        servicesOffered:
          type: string
        why:
          type: string
        logo:
          type: object
          properties:
            isUpdated:
              type: boolean
            file:
              type: object
              properties:
                filename:
                  type: string
                data:
                  type: string
              required:
                - filename
                - data
          required:
            - isUpdated
        comments:
          type: string
        headOfCompanyName:
          type: string
        headOfCompanyPosition:
          type: string
        headOfCompanyEmail:
          type: string
        headOfCompanyMobile:
          type: string
        contactPersons:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
      required:
        - name
        - address
        - country
        - city
        - telephone
        - servicesOffered
        - why
        - contactPersons
        - logo
    
    SendQuestionnaireNotification:
      type: object
      properties:
        id:
          type: string
        contactEmail:
          type: string
        comment:
          type: string
        companyId:
          type: string
      required:
        - id
        - contactEmail
        - comment
        - companyId


#################################################################### #
# Service
#################################################################### #
    
    ServiceCreate:
      type: object
      properties:
        supplierId:
          type: string
        companyId:
          type: string
        criticalNonUrgentServices:
          type: array
          items:
            type: string
        otherServices:
          type: array
          items:
            type: object
            properties:
              serviceCategoryId:
                type: string
              isUrgent:
                type: boolean
              approver:
                type: string
              commentForApprover:
                type: string
            required:
              - serviceCategoryId
              - isUrgent 
              - approver
        copiedServices:
          type: array
          items:
            type: string
            
      required:
        - supplierId
        - companyId
        - criticalNonUrgentServices
        - otherServices
        - copiedServices

    ServiceApproval:
      type: object
      properties:
        comment:
          type: string
          
    ServiceConditionalApproval:
      type: object
      properties:
        comment:
          type: string
      required:
        - comment
    
    ServiceRejection:
      type: object
      properties:
        comment:
          type: string
      required:
        - comment
    
    ServiceConditionalRejection:
      type: object
      properties:
        comment:
          type: string
      required:
        - comment
    
    ServiceSendForEvaluationArg:
      type: object
      properties:
        serviceIds:
          type: array
          items:
            type: string
        evaluator:
          type: string
        comment: 
          type: string
      required:
          - serviceIds
          - evaluator

    ServiceSendForApproval:
      type: object
      properties:
        serviceId:
          type: string
        approver:
          type: string
        comment:
          type: string
      required:
          - serviceId
          - approver

    Service:
      type: object
      properties:
        id:
          type: string
        category:
          $ref: '#/components/schemas/ServiceCategory'
        company:
          $ref: '#/components/schemas/Company'
        status:
          type: string
          enum:
            - WaitingForRiskAssessment
            - WaitingForQuestionnaire
            - WaitingForEvaluation
            - WaitingForApproval
            - Evaluated
            - Approved
            - Rejected
        conditionalStatus:
          type: string
          enum:
            - WaitingForApproval
            - Approved
            - Rejected 
        evaluationId:
          type: string
        riskAssessment:
          $ref: '#/components/schemas/RiskAssessment'
        isUrgent:
          type: boolean
        approver:
          $ref: '#/components/schemas/UserMinimal'
        modifiedBy:
          type: string
        evaluationComment:
          type: string
        evaluatorName:
          type: string
        evaluationCompletedUtc:
          type: string
        modifiedUtc:
          type: string
        
      required:
        - id
        - category
        - company
        - status
        - modifiedBy
        - isUrgent
        - modifiedUtc
    
    ServiceEvaluation:
      type: object
      properties:
        comment:
          type: string
      required:
        - comment


#################################################################### #
# Supplier
#################################################################### #
    ViewSupplierDetail:
      type: object
      properties:
        name:
          type: string
        logo:
          type: string
        requestedBy:
          $ref: '#/components/schemas/User'
        lastUpdatedUtc:
          type: string
          format: date
        dolphinCode:
          type: string
        address:
          type: string
        country:
          type: string
        city:
          type: string
        postCode:
          type: string
        telephone:
          type: string
        fax:
          type: string
        headOfCompanyName:
          type: string
        headOfCompanyPosition:
          type: string
        headOfCompanyEmail:
          type: string
        headOfCompanyMobile:
          type: string
        website:
          type: string
        why:
          type: string
        comments:
          type: string
        servicesOffered:
          type: string
        services:
          type: array
          items:
            $ref: '#/components/schemas/Service'
        contactPersons:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
            

    SupplierUpdate:
      type: object
      properties:
        message:
          type: string
    
    RejectBasicInfoUpdateRequest:
      type: object
      properties:
        message:
          type: string
      required:
        - message

    ApproveBasicInfoUpdateRequest:
      type: object
      properties:
        name:
          type: string
        doplphinCode:
          type: string
        address:
          type: string
        city:
          type: string
        country:
          type: string
        postCode:
          type: string
        telephone:
          type: string
        fax:
          type: string
        website:
          type: string
        servicesOffered:
          type: string
        why:
          type: string
        logo:
          type: object
          properties:
            isUpdated:
              type: boolean
            file:
              type: object
              properties:
                filename:
                  type: string
                data:
                  type: string
              required:
                - filename
                - data
          required:
            - isUpdated
        comments:
          type: string
        headOfCompanyName:
          type: string
        headOfCompanyPosition:
          type: string
        headOfCompanyEmail:
          type: string
        headOfCompanyMobile:
          type: string
        contactPersons:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
      required:
        - name
        - address
        - country
        - city
        - telephone
        - servicesOffered
        - why
        - contactPersons
        - logo

    SupplierServiceCategoriesRequest:
      type: object
      properties:
        message:
          type: string
        serviceCategories:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              isUrgent:
                type: boolean
            required:
              - id
              - isUrgent
  
    SupplierShort:
      type: object
      properties:
        id: 
          type: string
        name: 
          type: string
        city: 
          type: string
        country: 
          type: string
        logo: 
          type: string
        createdUtc: 
          type: string
      required:
        - id
        - name
        - city
        - country
        - createdUtc
    
    SupplierList:
      allOf:
        - $ref: '#/components/schemas/PaginatedList' 
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/SupplierShort'

    RequestForServiceView:
      type: object
      properties:
        id:
          type: string
        message:
          type: string
        requestedBy:
          $ref: '#/components/schemas/UserMinimal'
        createdUtc:
          type: string
        serviceCategories:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              isUrgent:
                type: boolean
            required:
              - id
              - isUrgent
    
    RequestBasicInfoUpdateView:
      type: object
      properties:
        id:
          type: string
        requestedBy:
          $ref: '#/components/schemas/UserMinimal'
        message:
          type: string
        createdUtc:
          type: string
                
#################################################################### #
# Request for supplier
#################################################################### #
    RequestForSupplier:
      type: object
      properties:
        forCompany:
          type: string
        supplierName:
          type: string
        dolphinCode:
          type: string
        address:
          type: string
        city:
          type: string
        postCode:
          type: string
        country:
          type: string
        telephone:
          type: string
        fax:
          type: string
        servicesOffered:
          type: string
        website:
          type: string
        why:
          type: string
        comments:
          type: string
        logo:
          $ref: '#/components/schemas/FileUpload'
        headOfCompanyName:
          type: string
        headOfCompanyPosition:
          type: string
        headOfCompanyEmail:
          type: string
        headOfCompanyMobile:
          type: string
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
        serviceCategories:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              isUrgent:
                type: boolean
            required:
              - id
              - isUrgent
      required:
        - forCompany
        - supplierName
        - address
        - city
        - country
        - telephone
        - servicesOffered
        - why
        - contacts
        - serviceCategories
    
    RequestForSupplierShort:
      type: object
      properties:
        id: 
          type: string
        name: 
          type: string
        city: 
          type: string
        country: 
          type: string
        logo: 
          type: string
        createdUtc: 
          type: string
      required:
        - id
        - name
        - city
        - country
        - createdUtc
        
    RequestForSupplierDetail:
      type: object
      properties:
        id:
          type: string
        forCompany:
          type: string
        supplierName:
          type: string
        dolphinCode:
          type: string
        address:
          type: string
        city:
          type: string
        postCode:
          type: string
        country:
          type: string
        telephone:
          type: string
        fax:
          type: string
        servicesOffered:
          type: string
        website:
          type: string
        why:
          type: string
        comments:
          type: string
        logo:
          type: string
        headOfCompanyName:
          type: string
        headOfCompanyPosition:
          type: string
        headOfCompanyEmail:
          type: string
        headOfCompanyMobile:
          type: string
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
        createdUtc:
          type: string
        serviceCategories:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              isUrgent:
                type: boolean
            required:
              - id
              - isUrgent
        requestedBy:
          $ref: '#/components/schemas/User'
        status:
          type: string
          enum:
            - Approved
            - Rejected
            - Requested
        rejectedUtc:
          type: string
        rejectionComment:
          type: string
      required:
        - forCompany
        - supplierName
        - address
        - city
        - country
        - telephone
        - servicesOffered
        - why
        - contacts
        - serviceCategories
        - createdUtc
        - id
        - requestedBy
        - status
    
    RequestForSupplierList:
      allOf:
        - $ref: '#/components/schemas/PaginatedList' 
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/RequestForSupplierShort' 

    RequestForSupplierReject:
      type: object
      properties:
        comment:
          type: string
      required:
        - comment
        
    RequestForSupplierApprove:
      type: object
      properties:
        criticalNonUrgentServices:
          type: array
          items:
            type: string
        otherServices:
          type: array
          items:
            type: object
            properties:
              serviceCategoryId:
                type: string
              isUrgent:
                type: boolean
              approver:
                type: string
              commentForApprover:
                type: string
            required:
              - serviceCategoryId
              - isUrgent 
              - approver
      required:
        - criticalNonUrgentServices
        - otherServices 


#################################################################### #
# Requests for service
#################################################################### #

    RequestForServiceApprove:
      type: object
      properties:
        criticalNonUrgentServices:
          type: array
          items:
            type: string
        otherServices:
          type: array
          items:
            type: object
            properties:
              serviceCategoryId:
                type: string
              isUrgent:
                type: boolean
              approver:
                type: string
              commentForApprover:
                type: string
            required:
              - serviceCategoryId
              - isUrgent 
              - approver
        copiedServices:
          type: array
          items:
            type: string
            
      required:
        - criticalNonUrgentServices
        - otherServices
        - copiedServices

    RequestForServiceReject:
      type: object
      properties:
        comment:
          type: string
      required:
        - comment
    
    RequestForServiceDetailView:
      type: object
      properties:
        id:
          type: string
        companyId:
          type: string
        name:
          type: string
        logo:
          type: string
        city:
          type: string
        country:
          type: string
        createdUtc:
          type: string
        supplierId:
          type: string
        serviceCategoryIds:
          type: array
          items:
            type: string
      required:
        - id
        - companyId
        - name
        - city
        - country
        - createdUtc
        - supplierId
        - serviceCategoryIds




#################################################################### #
# Evaluations
#################################################################### #
    
    EvaluationView:
      type: object
      properties:
        questionnaireId:
          type: string
        companyId:
          type: string
        data:
          $ref: '#/components/schemas/EvaluationDataDefinition'
        lastUpdatedUtc:
          type: string
      required:
        - questionnaireId
        - companyId
        - data
        - lastUpdatedUtc

    EvaluationDataDefinition: {}

    FileUpload:
      type: object
      properties:
        filename:
          type: string
        data:
          type: string
      required:
        - filename
        - data
    
    UploadedFile:
      type: object
      properties:
        filename:
          type: string
        url:
          type: string
      required:
        - filename
        - url

  securitySchemes:
    JwtToken:        
      type: apiKey
      in: header      
      name: x-auth-token
    
    JwtTokenInQuery:        
      type: apiKey
      in: query      
      name: x-auth-token
    
  parameters:
    guid:
      in: path
      description: GUID of entity
      name: id
      required: true
      schema:
        type: string
    
    page:
      name: page
      in: query
      description: Pagination parameter - page number
      required: false 
      schema:
        type: integer

    pageSize:
      name: pageSize
      in: query
      description: Pagination parameter - page size
      required: false 
      schema:
        type: integer
  
  responses:
    
    Error:
      description: Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    
    default:
          $ref: '#/components/responses/Error'
